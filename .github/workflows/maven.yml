# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# 元々mvn用のActionsテンプレートを使ったのでこういうタイトルになってる
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Java環境のセットアップ
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # mavenビルド
    - name: Build with Maven
      run: |
        mvn clean
        mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # jarファイルをカレントに持ってくる
    - name: move jar file
      run: |
        mv ./target/SpringSample-0.0.1-SNAPSHOT.jar ./

    # docker環境のセットアップ
    - name: Set up buildx
      uses: docker/setup-buildx-action@v2

    # ghcrにログイン
    - name: "ghcr.ioにログインする"
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # コンテナイメージ作ってghcrにプッシュ
    - name: Build and push images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        load: true
        tags: ghcr.io/${{ github.repository_owner }}/myapp:1
          
    - name: free
      run: |
        docker images

